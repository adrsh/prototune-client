diff --git a/node_modules/tone/build/esm/core/util/Timeline.js b/node_modules/tone/build/esm/core/util/Timeline.js
index 8439fc6..20fdf44 100644
--- a/node_modules/tone/build/esm/core/util/Timeline.js
+++ b/node_modules/tone/build/esm/core/util/Timeline.js
@@ -316,29 +316,35 @@ export class Timeline extends Tone {
         this._iterate(callback, lowerBound + 1);
         return this;
     }
+
+    previousTime
+
     /**
      * Iterate over everything in the array at the given time
      * @param  time The time to check if items are before
      * @param  callback The callback to invoke with every item
      */
     forEachAtTime(time, callback) {
-        // iterate over the items in reverse so that removing an item doesn't break things
-        const upperBound = this._search(time);
-        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {
-            let lowerBound = upperBound;
-            for (let i = upperBound; i >= 0; i--) {
-                if (EQ(this._timeline[i].time, time)) {
-                    lowerBound = i;
-                }
-                else {
-                    break;
+        if (this.previousTime !== time) {
+            this.previousTime = time
+            // iterate over the items in reverse so that removing an item doesn't break things
+            const upperBound = this._search(time);
+            if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {
+                let lowerBound = upperBound;
+                for (let i = upperBound; i >= 0; i--) {
+                    if (EQ(this._timeline[i].time, time)) {
+                        lowerBound = i;
+                    }
+                    else {
+                        break;
+                    }
                 }
+                this._iterate((event) => {
+                    callback(event);
+                }, lowerBound, upperBound);
             }
-            this._iterate((event) => {
-                callback(event);
-            }, lowerBound, upperBound);
+            return this;
         }
-        return this;
     }
     /**
      * Clean up.
